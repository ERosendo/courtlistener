# Generated by Django 3.2.18 on 2023-03-16 23:25

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):
    dependencies = [
        ('users', '0010_add_event_tables_and_triggers'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='grouppermissions',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='grouppermissions',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='groupproxy',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='groupproxy',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='permissionproxy',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='permissionproxy',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='usergroups',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='usergroups',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userpermissions',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userpermissions',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userprofile',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userprofile',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userprofilebarmembership',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userprofilebarmembership',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userproxy',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='userproxy',
            name='snapshot_update',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='grouppermissions',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_grouppermissionsevent" ("group_id", "id", "permission_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."group_id", OLD."id", OLD."permission_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;',
                                                   hash='1a8e56395d1425a8b0fb5014d274dc76d74a110e',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_9dcb9',
                                                   table='auth_group_permissions',
                                                   when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='groupproxy',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_groupproxyevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id"); RETURN NULL;',
                                                   hash='ba78b5f0795b51cf67736067a943b3fecc3af9f0',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_3afa4',
                                                   table='auth_group',
                                                   when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='permissionproxy',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_permissionproxyevent" ("codename", "content_type_id", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."codename", OLD."content_type_id", OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id"); RETURN NULL;',
                                                   hash='81dd17f9a5fe251ed7fb28dbe0e6e4d91a07ffdb',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_6176f',
                                                   table='auth_permission',
                                                   when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='usergroups',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_usergroupsevent" ("group_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "user_id") VALUES (OLD."group_id", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."user_id"); RETURN NULL;',
                                                   hash='ceba1d0a6dcdd784efa76bab3ae8e352a3893b44',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_cfd8c',
                                                   table='auth_user_groups',
                                                   when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='userpermissions',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_userpermissionsevent" ("id", "permission_id", "pgh_context_id", "pgh_created_at", "pgh_label", "user_id") VALUES (OLD."id", OLD."permission_id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."user_id"); RETURN NULL;',
                                                   hash='38242fce23b92a51e16d445a2a71739afd67c3e3',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_f1f22',
                                                   table='auth_user_user_permissions',
                                                   when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='userprofile',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_userprofileevent" ("activation_key", "address1", "address2", "auto_subscribe", "avatar", "city", "email_confirmed", "employer", "id", "is_tester", "key_expires", "notes", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plaintext_preferred", "recap_email", "state", "stub_account", "unlimited_docket_alerts", "user_id", "wants_newsletter", "zip_code") VALUES (OLD."activation_key", OLD."address1", OLD."address2", OLD."auto_subscribe", OLD."avatar", OLD."city", OLD."email_confirmed", OLD."employer", OLD."id", OLD."is_tester", OLD."key_expires", OLD."notes", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."plaintext_preferred", OLD."recap_email", OLD."state", OLD."stub_account", OLD."unlimited_docket_alerts", OLD."user_id", OLD."wants_newsletter", OLD."zip_code"); RETURN NULL;',
                                                   hash='0d086b7148d56eb34bf1491e0b222d82d7e006a2',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_34fb2',
                                                   table='users_userprofile',
                                                   when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='userprofilebarmembership',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_userprofilebarmembershipevent" ("barmembership_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "userprofile_id") VALUES (OLD."barmembership_id", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."userprofile_id"); RETURN NULL;',
                                                   hash='323ae60f4f3db7e65d3e75d54df24d227b8a274f',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_d59ec',
                                                   table='users_userprofile_barmembership',
                                                   when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='userproxy',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)',
                                                   func='INSERT INTO "users_userproxyevent" ("date_joined", "email", "first_name", "id", "is_active", "is_staff", "is_superuser", "last_login", "last_name", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "username") VALUES (OLD."date_joined", OLD."email", OLD."first_name", OLD."id", OLD."is_active", OLD."is_staff", OLD."is_superuser", OLD."last_login", OLD."last_name", OLD."password", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."username"); RETURN NULL;',
                                                   hash='77562423dbf9160fc240cd27f477ae8a877b188b',
                                                   operation='UPDATE',
                                                   pgid='pgtrigger_custom_snapshot_update_aa503',
                                                   table='auth_user',
                                                   when='AFTER')),
        ),
    ]
