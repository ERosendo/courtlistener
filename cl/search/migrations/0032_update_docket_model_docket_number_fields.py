# Generated by Django 5.0.7 on 2024-07-25 17:08

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("search", "0031_alter_opinion_type_alter_opinioncluster_source_noop"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="docket",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docket",
            name="update_or_delete_snapshot_update",
        ),
        migrations.AddField(
            model_name="docket",
            name="case_type",
            field=models.CharField(
                blank=True,
                db_index=True,
                help_text="Case type, e.g., civil (cv), magistrate (mj), criminal (cr), petty offense (po), and miscellaneous (mc). These codes can be upper case or lower case, and may vary in number of characters.",
                max_length=5,
            ),
        ),
        migrations.AddField(
            model_name="docket",
            name="defendant_number",
            field=models.SmallIntegerField(
                db_index=True,
                help_text="A unique number assigned to each defendant in a case, typically found in pacer criminal cases as a -1, -2 after the judge initials. Example: 1:14-cr-10363-RGS-1.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="docket",
            name="judge_initials",
            field=models.CharField(
                blank=True,
                db_index=True,
                help_text="A typically three-letter upper cased abbreviation of the judge's initials. In the example 2:07-cv-34911-MJL, MJL is the judge's initials. Judge initials change if a new judge takes over a case.",
                max_length=4,
            ),
        ),
        migrations.AddField(
            model_name="docket",
            name="office_code",
            field=models.CharField(
                blank=True,
                db_index=True,
                help_text="A one digit statistical code (either alphabetic or numeric) of the office within the district. In this example, 2:07-cv-34911-MJL, the 2 preceding the : is the office code.",
                max_length=1,
            ),
        ),
        migrations.AddField(
            model_name="docket",
            name="parent_docket",
            field=models.ForeignKey(
                blank=True,
                help_text="In criminal cases (and some magistrate) PACER creates a parent docket and one or more child dockets. Child dockets contain docket information for each individual defendant while parent dockets are a superset of all docket entries.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="child_dockets",
                to="search.docket",
            ),
        ),
        migrations.AddField(
            model_name="docketevent",
            name="case_type",
            field=models.CharField(
                blank=True,
                help_text="Case type, e.g., civil (cv), magistrate (mj), criminal (cr), petty offense (po), and miscellaneous (mc). These codes can be upper case or lower case, and may vary in number of characters.",
                max_length=5,
            ),
        ),
        migrations.AddField(
            model_name="docketevent",
            name="defendant_number",
            field=models.SmallIntegerField(
                help_text="A unique number assigned to each defendant in a case, typically found in pacer criminal cases as a -1, -2 after the judge initials. Example: 1:14-cr-10363-RGS-1.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="docketevent",
            name="judge_initials",
            field=models.CharField(
                blank=True,
                help_text="A typically three-letter upper cased abbreviation of the judge's initials. In the example 2:07-cv-34911-MJL, MJL is the judge's initials. Judge initials change if a new judge takes over a case.",
                max_length=4,
            ),
        ),
        migrations.AddField(
            model_name="docketevent",
            name="office_code",
            field=models.CharField(
                blank=True,
                help_text="A one digit statistical code (either alphabetic or numeric) of the office within the district. In this example, 2:07-cv-34911-MJL, the 2 preceding the : is the office code.",
                max_length=1,
            ),
        ),
        migrations.AddField(
            model_name="docketevent",
            name="parent_docket",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="In criminal cases (and some magistrate) PACER creates a parent docket and one or more child dockets. Child dockets contain docket information for each individual defendant while parent dockets are a superset of all docket entries.",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="search.docket",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docket",
            trigger=pgtrigger.compiler.Trigger(
                name="update_or_delete_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."date_created" IS DISTINCT FROM (NEW."date_created") OR OLD."source" IS DISTINCT FROM (NEW."source") OR OLD."court_id" IS DISTINCT FROM (NEW."court_id") OR OLD."appeal_from_id" IS DISTINCT FROM (NEW."appeal_from_id") OR OLD."parent_docket_id" IS DISTINCT FROM (NEW."parent_docket_id") OR OLD."appeal_from_str" IS DISTINCT FROM (NEW."appeal_from_str") OR OLD."originating_court_information_id" IS DISTINCT FROM (NEW."originating_court_information_id") OR OLD."idb_data_id" IS DISTINCT FROM (NEW."idb_data_id") OR OLD."assigned_to_id" IS DISTINCT FROM (NEW."assigned_to_id") OR OLD."assigned_to_str" IS DISTINCT FROM (NEW."assigned_to_str") OR OLD."referred_to_id" IS DISTINCT FROM (NEW."referred_to_id") OR OLD."referred_to_str" IS DISTINCT FROM (NEW."referred_to_str") OR OLD."panel_str" IS DISTINCT FROM (NEW."panel_str") OR OLD."date_last_index" IS DISTINCT FROM (NEW."date_last_index") OR OLD."date_cert_granted" IS DISTINCT FROM (NEW."date_cert_granted") OR OLD."date_cert_denied" IS DISTINCT FROM (NEW."date_cert_denied") OR OLD."date_argued" IS DISTINCT FROM (NEW."date_argued") OR OLD."date_reargued" IS DISTINCT FROM (NEW."date_reargued") OR OLD."date_reargument_denied" IS DISTINCT FROM (NEW."date_reargument_denied") OR OLD."date_filed" IS DISTINCT FROM (NEW."date_filed") OR OLD."date_terminated" IS DISTINCT FROM (NEW."date_terminated") OR OLD."date_last_filing" IS DISTINCT FROM (NEW."date_last_filing") OR OLD."case_name_short" IS DISTINCT FROM (NEW."case_name_short") OR OLD."case_name" IS DISTINCT FROM (NEW."case_name") OR OLD."case_name_full" IS DISTINCT FROM (NEW."case_name_full") OR OLD."slug" IS DISTINCT FROM (NEW."slug") OR OLD."docket_number" IS DISTINCT FROM (NEW."docket_number") OR OLD."docket_number_core" IS DISTINCT FROM (NEW."docket_number_core") OR OLD."office_code" IS DISTINCT FROM (NEW."office_code") OR OLD."case_type" IS DISTINCT FROM (NEW."case_type") OR OLD."judge_initials" IS DISTINCT FROM (NEW."judge_initials") OR OLD."defendant_number" IS DISTINCT FROM (NEW."defendant_number") OR OLD."pacer_case_id" IS DISTINCT FROM (NEW."pacer_case_id") OR OLD."cause" IS DISTINCT FROM (NEW."cause") OR OLD."nature_of_suit" IS DISTINCT FROM (NEW."nature_of_suit") OR OLD."jury_demand" IS DISTINCT FROM (NEW."jury_demand") OR OLD."jurisdiction_type" IS DISTINCT FROM (NEW."jurisdiction_type") OR OLD."appellate_fee_status" IS DISTINCT FROM (NEW."appellate_fee_status") OR OLD."appellate_case_type_information" IS DISTINCT FROM (NEW."appellate_case_type_information") OR OLD."mdl_status" IS DISTINCT FROM (NEW."mdl_status") OR OLD."filepath_local" IS DISTINCT FROM (NEW."filepath_local") OR OLD."filepath_ia" IS DISTINCT FROM (NEW."filepath_ia") OR OLD."filepath_ia_json" IS DISTINCT FROM (NEW."filepath_ia_json") OR OLD."ia_upload_failure_count" IS DISTINCT FROM (NEW."ia_upload_failure_count") OR OLD."ia_needs_upload" IS DISTINCT FROM (NEW."ia_needs_upload") OR OLD."ia_date_first_change" IS DISTINCT FROM (NEW."ia_date_first_change") OR OLD."date_blocked" IS DISTINCT FROM (NEW."date_blocked") OR OLD."blocked" IS DISTINCT FROM (NEW."blocked"))',
                    func='INSERT INTO "search_docketevent" ("appeal_from_id", "appeal_from_str", "appellate_case_type_information", "appellate_fee_status", "assigned_to_id", "assigned_to_str", "blocked", "case_name", "case_name_full", "case_name_short", "case_type", "cause", "court_id", "date_argued", "date_blocked", "date_cert_denied", "date_cert_granted", "date_created", "date_filed", "date_last_filing", "date_last_index", "date_modified", "date_reargued", "date_reargument_denied", "date_terminated", "defendant_number", "docket_number", "docket_number_core", "filepath_ia", "filepath_ia_json", "filepath_local", "ia_date_first_change", "ia_needs_upload", "ia_upload_failure_count", "id", "idb_data_id", "judge_initials", "jurisdiction_type", "jury_demand", "mdl_status", "nature_of_suit", "office_code", "originating_court_information_id", "pacer_case_id", "panel_str", "parent_docket_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referred_to_id", "referred_to_str", "slug", "source") VALUES (OLD."appeal_from_id", OLD."appeal_from_str", OLD."appellate_case_type_information", OLD."appellate_fee_status", OLD."assigned_to_id", OLD."assigned_to_str", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."case_type", OLD."cause", OLD."court_id", OLD."date_argued", OLD."date_blocked", OLD."date_cert_denied", OLD."date_cert_granted", OLD."date_created", OLD."date_filed", OLD."date_last_filing", OLD."date_last_index", OLD."date_modified", OLD."date_reargued", OLD."date_reargument_denied", OLD."date_terminated", OLD."defendant_number", OLD."docket_number", OLD."docket_number_core", OLD."filepath_ia", OLD."filepath_ia_json", OLD."filepath_local", OLD."ia_date_first_change", OLD."ia_needs_upload", OLD."ia_upload_failure_count", OLD."id", OLD."idb_data_id", OLD."judge_initials", OLD."jurisdiction_type", OLD."jury_demand", OLD."mdl_status", OLD."nature_of_suit", OLD."office_code", OLD."originating_court_information_id", OLD."pacer_case_id", OLD."panel_str", OLD."parent_docket_id", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."referred_to_id", OLD."referred_to_str", OLD."slug", OLD."source"); RETURN NULL;',
                    hash="8154023f4bc7281606f9e0be331261fc3cc71241",
                    operation="UPDATE",
                    pgid="pgtrigger_update_or_delete_snapshot_update_7e039",
                    table="search_docket",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docket",
            trigger=pgtrigger.compiler.Trigger(
                name="update_or_delete_snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_docketevent" ("appeal_from_id", "appeal_from_str", "appellate_case_type_information", "appellate_fee_status", "assigned_to_id", "assigned_to_str", "blocked", "case_name", "case_name_full", "case_name_short", "case_type", "cause", "court_id", "date_argued", "date_blocked", "date_cert_denied", "date_cert_granted", "date_created", "date_filed", "date_last_filing", "date_last_index", "date_modified", "date_reargued", "date_reargument_denied", "date_terminated", "defendant_number", "docket_number", "docket_number_core", "filepath_ia", "filepath_ia_json", "filepath_local", "ia_date_first_change", "ia_needs_upload", "ia_upload_failure_count", "id", "idb_data_id", "judge_initials", "jurisdiction_type", "jury_demand", "mdl_status", "nature_of_suit", "office_code", "originating_court_information_id", "pacer_case_id", "panel_str", "parent_docket_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referred_to_id", "referred_to_str", "slug", "source") VALUES (OLD."appeal_from_id", OLD."appeal_from_str", OLD."appellate_case_type_information", OLD."appellate_fee_status", OLD."assigned_to_id", OLD."assigned_to_str", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."case_type", OLD."cause", OLD."court_id", OLD."date_argued", OLD."date_blocked", OLD."date_cert_denied", OLD."date_cert_granted", OLD."date_created", OLD."date_filed", OLD."date_last_filing", OLD."date_last_index", OLD."date_modified", OLD."date_reargued", OLD."date_reargument_denied", OLD."date_terminated", OLD."defendant_number", OLD."docket_number", OLD."docket_number_core", OLD."filepath_ia", OLD."filepath_ia_json", OLD."filepath_local", OLD."ia_date_first_change", OLD."ia_needs_upload", OLD."ia_upload_failure_count", OLD."id", OLD."idb_data_id", OLD."judge_initials", OLD."jurisdiction_type", OLD."jury_demand", OLD."mdl_status", OLD."nature_of_suit", OLD."office_code", OLD."originating_court_information_id", OLD."pacer_case_id", OLD."panel_str", OLD."parent_docket_id", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."referred_to_id", OLD."referred_to_str", OLD."slug", OLD."source"); RETURN NULL;',
                    hash="5b02a9c2cedd3b32a8c455a966bf31b02576d67f",
                    operation="DELETE",
                    pgid="pgtrigger_update_or_delete_snapshot_delete_7294f",
                    table="search_docket",
                    when="AFTER",
                ),
            ),
        ),
    ]
