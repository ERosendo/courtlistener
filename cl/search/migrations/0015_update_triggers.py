# Generated by Django 3.2.18 on 2023-03-16 02:47

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0014_docket_district_court_docket_lookup_idx'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='bankruptcyinformation',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='bankruptcyinformation',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='citation',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='citation',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='claim',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='claim',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='claimhistory',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='claimhistory',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='claimtags',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='claimtags',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='court',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='court',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docket',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docket',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docketentry',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docketentry',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docketentrytags',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docketentrytags',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docketpanel',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='docketpanel',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='dockettags',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='dockettags',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinion',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinion',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinioncluster',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinioncluster',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinionclusternonparticipatingjudges',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinionclusternonparticipatingjudges',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinionclusterpanel',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinionclusterpanel',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinionjoinedby',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='opinionjoinedby',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='originatingcourtinformation',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='originatingcourtinformation',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='recapdocument',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='recapdocument',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='recapdocumenttags',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='recapdocumenttags',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='tag',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='tag',
            name='snapshot_update',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='bankruptcyinformation',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_bankruptcyinformationevent" ("chapter", "date_converted", "date_created", "date_debtor_dismissed", "date_last_to_file_claims", "date_last_to_file_govt", "date_modified", "docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "trustee_str") VALUES (NEW."chapter", NEW."date_converted", NEW."date_created", NEW."date_debtor_dismissed", NEW."date_last_to_file_claims", NEW."date_last_to_file_govt", NEW."date_modified", NEW."docket_id", NEW."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."trustee_str"); RETURN NULL;', hash='c467c3b2ca5838fa676f21c744bb4b8feb4afb39', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_0ce19', table='search_bankruptcyinformation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='bankruptcyinformation',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_bankruptcyinformationevent" ("chapter", "date_converted", "date_created", "date_debtor_dismissed", "date_last_to_file_claims", "date_last_to_file_govt", "date_modified", "docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "trustee_str") VALUES (OLD."chapter", OLD."date_converted", OLD."date_created", OLD."date_debtor_dismissed", OLD."date_last_to_file_claims", OLD."date_last_to_file_govt", OLD."date_modified", OLD."docket_id", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."trustee_str"); RETURN NULL;', hash='99f0b7b9558e69eed58c2bf61af7b94459078b9c', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_2d975', table='search_bankruptcyinformation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='citation',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_citationevent" ("cluster_id", "id", "page", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reporter", "type", "volume") VALUES (NEW."cluster_id", NEW."id", NEW."page", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."reporter", NEW."type", NEW."volume"); RETURN NULL;', hash='d1d83ce5524ab5dda81e13ac678a5a8e1593ea5c', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_83000', table='search_citation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='citation',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_citationevent" ("cluster_id", "id", "page", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reporter", "type", "volume") VALUES (OLD."cluster_id", OLD."id", OLD."page", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."reporter", OLD."type", OLD."volume"); RETURN NULL;', hash='cfffec0c5e5e03f909ad2dc19ff6d83e2f3bb34e', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_5c8dd', table='search_citation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='claim',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_claimevent" ("amount_claimed", "claim_number", "creditor_details", "creditor_id", "date_claim_modified", "date_created", "date_last_amendment_entered", "date_last_amendment_filed", "date_modified", "date_original_entered", "date_original_filed", "description", "docket_id", "entered_by", "filed_by", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_claimed", "remarks", "secured_claimed", "status", "unsecured_claimed") VALUES (NEW."amount_claimed", NEW."claim_number", NEW."creditor_details", NEW."creditor_id", NEW."date_claim_modified", NEW."date_created", NEW."date_last_amendment_entered", NEW."date_last_amendment_filed", NEW."date_modified", NEW."date_original_entered", NEW."date_original_filed", NEW."description", NEW."docket_id", NEW."entered_by", NEW."filed_by", NEW."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."priority_claimed", NEW."remarks", NEW."secured_claimed", NEW."status", NEW."unsecured_claimed"); RETURN NULL;', hash='453e634b0355e80cb1b21a59a685954b5e702ec7', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_e8e87', table='search_claim', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='claim',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_claimevent" ("amount_claimed", "claim_number", "creditor_details", "creditor_id", "date_claim_modified", "date_created", "date_last_amendment_entered", "date_last_amendment_filed", "date_modified", "date_original_entered", "date_original_filed", "description", "docket_id", "entered_by", "filed_by", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_claimed", "remarks", "secured_claimed", "status", "unsecured_claimed") VALUES (OLD."amount_claimed", OLD."claim_number", OLD."creditor_details", OLD."creditor_id", OLD."date_claim_modified", OLD."date_created", OLD."date_last_amendment_entered", OLD."date_last_amendment_filed", OLD."date_modified", OLD."date_original_entered", OLD."date_original_filed", OLD."description", OLD."docket_id", OLD."entered_by", OLD."filed_by", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."priority_claimed", OLD."remarks", OLD."secured_claimed", OLD."status", OLD."unsecured_claimed"); RETURN NULL;', hash='00f9d3184af8a50cf4c5d6d26feb9c52ccf18f59', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_76873', table='search_claim', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='claimhistory',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_claimhistoryevent" ("attachment_number", "claim_doc_id", "claim_document_type", "claim_id", "date_created", "date_filed", "date_modified", "date_upload", "description", "document_number", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_case_id", "pacer_dm_id", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (NEW."attachment_number", NEW."claim_doc_id", NEW."claim_document_type", NEW."claim_id", NEW."date_created", NEW."date_filed", NEW."date_modified", NEW."date_upload", NEW."description", NEW."document_number", NEW."file_size", NEW."filepath_ia", NEW."filepath_local", NEW."ia_upload_failure_count", NEW."id", NEW."is_available", NEW."is_free_on_pacer", NEW."is_sealed", NEW."ocr_status", NEW."pacer_case_id", NEW."pacer_dm_id", NEW."pacer_doc_id", NEW."page_count", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."plain_text", NEW."sha1", NEW."thumbnail", NEW."thumbnail_status"); RETURN NULL;', hash='f189e46d1d76908a930296f0a7e246b93e4800c2', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_53e72', table='search_claimhistory', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='claimhistory',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_claimhistoryevent" ("attachment_number", "claim_doc_id", "claim_document_type", "claim_id", "date_created", "date_filed", "date_modified", "date_upload", "description", "document_number", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_case_id", "pacer_dm_id", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (OLD."attachment_number", OLD."claim_doc_id", OLD."claim_document_type", OLD."claim_id", OLD."date_created", OLD."date_filed", OLD."date_modified", OLD."date_upload", OLD."description", OLD."document_number", OLD."file_size", OLD."filepath_ia", OLD."filepath_local", OLD."ia_upload_failure_count", OLD."id", OLD."is_available", OLD."is_free_on_pacer", OLD."is_sealed", OLD."ocr_status", OLD."pacer_case_id", OLD."pacer_dm_id", OLD."pacer_doc_id", OLD."page_count", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."plain_text", OLD."sha1", OLD."thumbnail", OLD."thumbnail_status"); RETURN NULL;', hash='6e166458889009a05a4fcb89aab47bff611ebaaf', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_aa65e', table='search_claimhistory', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='claimtags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_claimtagsevent" ("claim_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (NEW."claim_id", NEW."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."tag_id"); RETURN NULL;', hash='726b827f30385dadb1e30d67adf5b1432839b2e6', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_e37f5', table='search_claim_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='claimtags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_claimtagsevent" ("claim_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (OLD."claim_id", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."tag_id"); RETURN NULL;', hash='b0ffc2d5d494db8c1e8c8a9a181b0a1fde529e48', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_de007', table='search_claim_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='court',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_courtevent" ("citation_string", "date_last_pacer_contact", "date_modified", "end_date", "fjc_court_id", "full_name", "has_opinion_scraper", "has_oral_argument_scraper", "id", "in_use", "jurisdiction", "notes", "pacer_court_id", "pacer_has_rss_feed", "pacer_rss_entry_types", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "short_name", "start_date", "url") VALUES (NEW."citation_string", NEW."date_last_pacer_contact", NEW."date_modified", NEW."end_date", NEW."fjc_court_id", NEW."full_name", NEW."has_opinion_scraper", NEW."has_oral_argument_scraper", NEW."id", NEW."in_use", NEW."jurisdiction", NEW."notes", NEW."pacer_court_id", NEW."pacer_has_rss_feed", NEW."pacer_rss_entry_types", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."position", NEW."short_name", NEW."start_date", NEW."url"); RETURN NULL;', hash='a0f16e3881feb8305606df49ef13cb41baa0f3ce', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_34307', table='search_court', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='court',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_courtevent" ("citation_string", "date_last_pacer_contact", "date_modified", "end_date", "fjc_court_id", "full_name", "has_opinion_scraper", "has_oral_argument_scraper", "id", "in_use", "jurisdiction", "notes", "pacer_court_id", "pacer_has_rss_feed", "pacer_rss_entry_types", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "short_name", "start_date", "url") VALUES (OLD."citation_string", OLD."date_last_pacer_contact", OLD."date_modified", OLD."end_date", OLD."fjc_court_id", OLD."full_name", OLD."has_opinion_scraper", OLD."has_oral_argument_scraper", OLD."id", OLD."in_use", OLD."jurisdiction", OLD."notes", OLD."pacer_court_id", OLD."pacer_has_rss_feed", OLD."pacer_rss_entry_types", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."position", OLD."short_name", OLD."start_date", OLD."url"); RETURN NULL;', hash='c36dc0f90219f1d2812f533878fc4e09e2851fe0', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_94f74', table='search_court', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docket',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_docketevent" ("appeal_from_id", "appeal_from_str", "appellate_case_type_information", "appellate_fee_status", "assigned_to_id", "assigned_to_str", "blocked", "case_name", "case_name_full", "case_name_short", "cause", "court_id", "date_argued", "date_blocked", "date_cert_denied", "date_cert_granted", "date_created", "date_filed", "date_last_filing", "date_last_index", "date_modified", "date_reargued", "date_reargument_denied", "date_terminated", "docket_number", "docket_number_core", "filepath_ia", "filepath_ia_json", "filepath_local", "ia_date_first_change", "ia_needs_upload", "ia_upload_failure_count", "id", "idb_data_id", "jurisdiction_type", "jury_demand", "mdl_status", "nature_of_suit", "originating_court_information_id", "pacer_case_id", "panel_str", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referred_to_id", "referred_to_str", "slug", "source") VALUES (NEW."appeal_from_id", NEW."appeal_from_str", NEW."appellate_case_type_information", NEW."appellate_fee_status", NEW."assigned_to_id", NEW."assigned_to_str", NEW."blocked", NEW."case_name", NEW."case_name_full", NEW."case_name_short", NEW."cause", NEW."court_id", NEW."date_argued", NEW."date_blocked", NEW."date_cert_denied", NEW."date_cert_granted", NEW."date_created", NEW."date_filed", NEW."date_last_filing", NEW."date_last_index", NEW."date_modified", NEW."date_reargued", NEW."date_reargument_denied", NEW."date_terminated", NEW."docket_number", NEW."docket_number_core", NEW."filepath_ia", NEW."filepath_ia_json", NEW."filepath_local", NEW."ia_date_first_change", NEW."ia_needs_upload", NEW."ia_upload_failure_count", NEW."id", NEW."idb_data_id", NEW."jurisdiction_type", NEW."jury_demand", NEW."mdl_status", NEW."nature_of_suit", NEW."originating_court_information_id", NEW."pacer_case_id", NEW."panel_str", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."referred_to_id", NEW."referred_to_str", NEW."slug", NEW."source"); RETURN NULL;', hash='03ed1cab242c9a84446f39e3845348a99b4e25ed', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_69a95', table='search_docket', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docket',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."source" IS DISTINCT FROM NEW."source" OR OLD."court_id" IS DISTINCT FROM NEW."court_id" OR OLD."appeal_from_id" IS DISTINCT FROM NEW."appeal_from_id" OR OLD."appeal_from_str" IS DISTINCT FROM NEW."appeal_from_str" OR OLD."originating_court_information_id" IS DISTINCT FROM NEW."originating_court_information_id" OR OLD."idb_data_id" IS DISTINCT FROM NEW."idb_data_id" OR OLD."assigned_to_id" IS DISTINCT FROM NEW."assigned_to_id" OR OLD."assigned_to_str" IS DISTINCT FROM NEW."assigned_to_str" OR OLD."referred_to_id" IS DISTINCT FROM NEW."referred_to_id" OR OLD."referred_to_str" IS DISTINCT FROM NEW."referred_to_str" OR OLD."panel_str" IS DISTINCT FROM NEW."panel_str" OR OLD."case_name_short" IS DISTINCT FROM NEW."case_name_short" OR OLD."case_name" IS DISTINCT FROM NEW."case_name" OR OLD."case_name_full" IS DISTINCT FROM NEW."case_name_full" OR OLD."slug" IS DISTINCT FROM NEW."slug" OR OLD."docket_number" IS DISTINCT FROM NEW."docket_number" OR OLD."docket_number_core" IS DISTINCT FROM NEW."docket_number_core" OR OLD."pacer_case_id" IS DISTINCT FROM NEW."pacer_case_id" OR OLD."cause" IS DISTINCT FROM NEW."cause" OR OLD."nature_of_suit" IS DISTINCT FROM NEW."nature_of_suit" OR OLD."jury_demand" IS DISTINCT FROM NEW."jury_demand" OR OLD."jurisdiction_type" IS DISTINCT FROM NEW."jurisdiction_type" OR OLD."appellate_fee_status" IS DISTINCT FROM NEW."appellate_fee_status" OR OLD."appellate_case_type_information" IS DISTINCT FROM NEW."appellate_case_type_information" OR OLD."mdl_status" IS DISTINCT FROM NEW."mdl_status" OR OLD."filepath_local" IS DISTINCT FROM NEW."filepath_local" OR OLD."filepath_ia" IS DISTINCT FROM NEW."filepath_ia" OR OLD."filepath_ia_json" IS DISTINCT FROM NEW."filepath_ia_json" OR OLD."ia_upload_failure_count" IS DISTINCT FROM NEW."ia_upload_failure_count" OR OLD."ia_needs_upload" IS DISTINCT FROM NEW."ia_needs_upload" OR OLD."blocked" IS DISTINCT FROM NEW."blocked")', func='INSERT INTO "search_docketevent" ("appeal_from_id", "appeal_from_str", "appellate_case_type_information", "appellate_fee_status", "assigned_to_id", "assigned_to_str", "blocked", "case_name", "case_name_full", "case_name_short", "cause", "court_id", "date_argued", "date_blocked", "date_cert_denied", "date_cert_granted", "date_created", "date_filed", "date_last_filing", "date_last_index", "date_modified", "date_reargued", "date_reargument_denied", "date_terminated", "docket_number", "docket_number_core", "filepath_ia", "filepath_ia_json", "filepath_local", "ia_date_first_change", "ia_needs_upload", "ia_upload_failure_count", "id", "idb_data_id", "jurisdiction_type", "jury_demand", "mdl_status", "nature_of_suit", "originating_court_information_id", "pacer_case_id", "panel_str", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referred_to_id", "referred_to_str", "slug", "source") VALUES (OLD."appeal_from_id", OLD."appeal_from_str", OLD."appellate_case_type_information", OLD."appellate_fee_status", OLD."assigned_to_id", OLD."assigned_to_str", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."cause", OLD."court_id", OLD."date_argued", OLD."date_blocked", OLD."date_cert_denied", OLD."date_cert_granted", OLD."date_created", OLD."date_filed", OLD."date_last_filing", OLD."date_last_index", OLD."date_modified", OLD."date_reargued", OLD."date_reargument_denied", OLD."date_terminated", OLD."docket_number", OLD."docket_number_core", OLD."filepath_ia", OLD."filepath_ia_json", OLD."filepath_local", OLD."ia_date_first_change", OLD."ia_needs_upload", OLD."ia_upload_failure_count", OLD."id", OLD."idb_data_id", OLD."jurisdiction_type", OLD."jury_demand", OLD."mdl_status", OLD."nature_of_suit", OLD."originating_court_information_id", OLD."pacer_case_id", OLD."panel_str", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."referred_to_id", OLD."referred_to_str", OLD."slug", OLD."source"); RETURN NULL;', hash='cdc31526f80b44739077d1f8f21fa84f77acd827', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_a5c9a', table='search_docket', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docketentry',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_docketentryevent" ("date_created", "date_filed", "date_modified", "description", "docket_id", "entry_number", "id", "pacer_sequence_number", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "recap_sequence_number", "time_filed") VALUES (NEW."date_created", NEW."date_filed", NEW."date_modified", NEW."description", NEW."docket_id", NEW."entry_number", NEW."id", NEW."pacer_sequence_number", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."recap_sequence_number", NEW."time_filed"); RETURN NULL;', hash='b0002f93c52c9c633cba71e68be977f919673ed7', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_9672f', table='search_docketentry', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docketentry',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_docketentryevent" ("date_created", "date_filed", "date_modified", "description", "docket_id", "entry_number", "id", "pacer_sequence_number", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "recap_sequence_number", "time_filed") VALUES (OLD."date_created", OLD."date_filed", OLD."date_modified", OLD."description", OLD."docket_id", OLD."entry_number", OLD."id", OLD."pacer_sequence_number", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."recap_sequence_number", OLD."time_filed"); RETURN NULL;', hash='a35c7807b846621faba444e460f02a799eab1a6d', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_1fcaa', table='search_docketentry', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docketentrytags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_docketentrytagsevent" ("docketentry_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (NEW."docketentry_id", NEW."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."tag_id"); RETURN NULL;', hash='16c3892511bc39c4c10f5a8efaf510d18d76f012', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_d8ff9', table='search_docketentry_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docketentrytags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_docketentrytagsevent" ("docketentry_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (OLD."docketentry_id", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."tag_id"); RETURN NULL;', hash='ecdcc45eed67cbbb684d972cc2558702ad0403eb', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_63669', table='search_docketentry_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docketpanel',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_docketpanelevent" ("docket_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."docket_id", NEW."id", NEW."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='411f304c25c41dc7a4355bd7c43a5dda6c4b897e', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_614fe', table='search_docket_panel', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='docketpanel',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_docketpanelevent" ("docket_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."docket_id", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='8e665c08631ef348ce02db66c55944b6d8f07be1', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_6b46c', table='search_docket_panel', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='dockettags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_dockettagsevent" ("docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (NEW."docket_id", NEW."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."tag_id"); RETURN NULL;', hash='25b0082b8f46833b1cc94ba99bb847356860153a', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_1340e', table='search_docket_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='dockettags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_dockettagsevent" ("docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (OLD."docket_id", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."tag_id"); RETURN NULL;', hash='560eb2ddfa3fc28e6559091655f13dac8b138097', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_1e09e', table='search_docket_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinion',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_opinionevent" ("author_id", "author_str", "cluster_id", "date_created", "date_modified", "download_url", "extracted_by_ocr", "html", "html_anon_2020", "html_columbia", "html_lawbox", "html_with_citations", "id", "joined_by_str", "local_path", "page_count", "per_curiam", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "type", "xml_harvard") VALUES (NEW."author_id", NEW."author_str", NEW."cluster_id", NEW."date_created", NEW."date_modified", NEW."download_url", NEW."extracted_by_ocr", NEW."html", NEW."html_anon_2020", NEW."html_columbia", NEW."html_lawbox", NEW."html_with_citations", NEW."id", NEW."joined_by_str", NEW."local_path", NEW."page_count", NEW."per_curiam", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."plain_text", NEW."sha1", NEW."type", NEW."xml_harvard"); RETURN NULL;', hash='b9f5a0ac11c71799ee19e5f0b3e5e89bb50a3ae2', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_18b5e', table='search_opinion', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinion',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_opinionevent" ("author_id", "author_str", "cluster_id", "date_created", "date_modified", "download_url", "extracted_by_ocr", "html", "html_anon_2020", "html_columbia", "html_lawbox", "html_with_citations", "id", "joined_by_str", "local_path", "page_count", "per_curiam", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "type", "xml_harvard") VALUES (OLD."author_id", OLD."author_str", OLD."cluster_id", OLD."date_created", OLD."date_modified", OLD."download_url", OLD."extracted_by_ocr", OLD."html", OLD."html_anon_2020", OLD."html_columbia", OLD."html_lawbox", OLD."html_with_citations", OLD."id", OLD."joined_by_str", OLD."local_path", OLD."page_count", OLD."per_curiam", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."plain_text", OLD."sha1", OLD."type", OLD."xml_harvard"); RETURN NULL;', hash='08f7828872b60973dabfc047fec927901f1fb989', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_e1164', table='search_opinion', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinioncluster',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_opinionclusterevent" ("attorneys", "blocked", "case_name", "case_name_full", "case_name_short", "citation_count", "correction", "cross_reference", "date_blocked", "date_created", "date_filed", "date_filed_is_approximate", "date_modified", "disposition", "docket_id", "filepath_json_harvard", "headnotes", "history", "id", "judges", "nature_of_suit", "other_dates", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "posture", "precedential_status", "procedural_history", "scdb_decision_direction", "scdb_id", "scdb_votes_majority", "scdb_votes_minority", "slug", "source", "summary", "syllabus") VALUES (NEW."attorneys", NEW."blocked", NEW."case_name", NEW."case_name_full", NEW."case_name_short", NEW."citation_count", NEW."correction", NEW."cross_reference", NEW."date_blocked", NEW."date_created", NEW."date_filed", NEW."date_filed_is_approximate", NEW."date_modified", NEW."disposition", NEW."docket_id", NEW."filepath_json_harvard", NEW."headnotes", NEW."history", NEW."id", NEW."judges", NEW."nature_of_suit", NEW."other_dates", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."posture", NEW."precedential_status", NEW."procedural_history", NEW."scdb_decision_direction", NEW."scdb_id", NEW."scdb_votes_majority", NEW."scdb_votes_minority", NEW."slug", NEW."source", NEW."summary", NEW."syllabus"); RETURN NULL;', hash='9da6e099de3aae7151a95aa01aa82d57243aec01', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_0865b', table='search_opinioncluster', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinioncluster',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_opinionclusterevent" ("attorneys", "blocked", "case_name", "case_name_full", "case_name_short", "citation_count", "correction", "cross_reference", "date_blocked", "date_created", "date_filed", "date_filed_is_approximate", "date_modified", "disposition", "docket_id", "filepath_json_harvard", "headnotes", "history", "id", "judges", "nature_of_suit", "other_dates", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "posture", "precedential_status", "procedural_history", "scdb_decision_direction", "scdb_id", "scdb_votes_majority", "scdb_votes_minority", "slug", "source", "summary", "syllabus") VALUES (OLD."attorneys", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."citation_count", OLD."correction", OLD."cross_reference", OLD."date_blocked", OLD."date_created", OLD."date_filed", OLD."date_filed_is_approximate", OLD."date_modified", OLD."disposition", OLD."docket_id", OLD."filepath_json_harvard", OLD."headnotes", OLD."history", OLD."id", OLD."judges", OLD."nature_of_suit", OLD."other_dates", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."posture", OLD."precedential_status", OLD."procedural_history", OLD."scdb_decision_direction", OLD."scdb_id", OLD."scdb_votes_majority", OLD."scdb_votes_minority", OLD."slug", OLD."source", OLD."summary", OLD."syllabus"); RETURN NULL;', hash='fa303ebfe434c2b4c8d9c71ba726482935679f38', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_927eb', table='search_opinioncluster', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinionclusternonparticipatingjudges',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_opinionclusternonparticipatingjudgesevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."id", NEW."opinioncluster_id", NEW."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='c08da0972b0dd849c5f12d831827081571bc2edc', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_2f481', table='search_opinioncluster_non_participating_judges', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinionclusternonparticipatingjudges',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_opinionclusternonparticipatingjudgesevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."id", OLD."opinioncluster_id", OLD."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='de6310eda964650917c4c813b12ae475958cff7b', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_ffb31', table='search_opinioncluster_non_participating_judges', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinionclusterpanel',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_opinionclusterpanelevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."id", NEW."opinioncluster_id", NEW."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='711b03d1219895fcad1ddfe3c511703ede211cd2', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_f16ea', table='search_opinioncluster_panel', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinionclusterpanel',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_opinionclusterpanelevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."id", OLD."opinioncluster_id", OLD."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='22119c25de05266160154612a848d0387c587178', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_69622', table='search_opinioncluster_panel', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinionjoinedby',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_opinionjoinedbyevent" ("id", "opinion_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."id", NEW."opinion_id", NEW."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='26af638c8f2a2f9d3993b9c14d35aafc9e71371c', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_86f0e', table='search_opinion_joined_by', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opinionjoinedby',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_opinionjoinedbyevent" ("id", "opinion_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."id", OLD."opinion_id", OLD."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='b41c8725925745435501525f1daae59ebe18cd52', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_5a491', table='search_opinion_joined_by', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='originatingcourtinformation',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_originatingcourtinformationevent" ("assigned_to_id", "assigned_to_str", "court_reporter", "date_created", "date_disposed", "date_filed", "date_filed_noa", "date_judgment", "date_judgment_eod", "date_modified", "date_received_coa", "docket_number", "id", "ordering_judge_id", "ordering_judge_str", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."assigned_to_id", NEW."assigned_to_str", NEW."court_reporter", NEW."date_created", NEW."date_disposed", NEW."date_filed", NEW."date_filed_noa", NEW."date_judgment", NEW."date_judgment_eod", NEW."date_modified", NEW."date_received_coa", NEW."docket_number", NEW."id", NEW."ordering_judge_id", NEW."ordering_judge_str", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id"); RETURN NULL;', hash='bf4c0d3d7ef7e8eed0b18f011c23eabb9cf338f0', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_91b5d', table='search_originatingcourtinformation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='originatingcourtinformation',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_originatingcourtinformationevent" ("assigned_to_id", "assigned_to_str", "court_reporter", "date_created", "date_disposed", "date_filed", "date_filed_noa", "date_judgment", "date_judgment_eod", "date_modified", "date_received_coa", "docket_number", "id", "ordering_judge_id", "ordering_judge_str", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."assigned_to_id", OLD."assigned_to_str", OLD."court_reporter", OLD."date_created", OLD."date_disposed", OLD."date_filed", OLD."date_filed_noa", OLD."date_judgment", OLD."date_judgment_eod", OLD."date_modified", OLD."date_received_coa", OLD."docket_number", OLD."id", OLD."ordering_judge_id", OLD."ordering_judge_str", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id"); RETURN NULL;', hash='ffa848cdd6911193896e18f6440b7dd7877d2041', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_0891b', table='search_originatingcourtinformation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='recapdocument',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_recapdocumentevent" ("attachment_number", "date_created", "date_modified", "date_upload", "description", "docket_entry_id", "document_number", "document_type", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (NEW."attachment_number", NEW."date_created", NEW."date_modified", NEW."date_upload", NEW."description", NEW."docket_entry_id", NEW."document_number", NEW."document_type", NEW."file_size", NEW."filepath_ia", NEW."filepath_local", NEW."ia_upload_failure_count", NEW."id", NEW."is_available", NEW."is_free_on_pacer", NEW."is_sealed", NEW."ocr_status", NEW."pacer_doc_id", NEW."page_count", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."plain_text", NEW."sha1", NEW."thumbnail", NEW."thumbnail_status"); RETURN NULL;', hash='ea18d6949452831cf4e5776f43c657e23e14bd0d', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_de0a8', table='search_recapdocument', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='recapdocument',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_recapdocumentevent" ("attachment_number", "date_created", "date_modified", "date_upload", "description", "docket_entry_id", "document_number", "document_type", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (OLD."attachment_number", OLD."date_created", OLD."date_modified", OLD."date_upload", OLD."description", OLD."docket_entry_id", OLD."document_number", OLD."document_type", OLD."file_size", OLD."filepath_ia", OLD."filepath_local", OLD."ia_upload_failure_count", OLD."id", OLD."is_available", OLD."is_free_on_pacer", OLD."is_sealed", OLD."ocr_status", OLD."pacer_doc_id", OLD."page_count", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."plain_text", OLD."sha1", OLD."thumbnail", OLD."thumbnail_status"); RETURN NULL;', hash='d20577b855a2764e65b5c8b73e0924dfeee235fe', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_e466a', table='search_recapdocument', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='recapdocumenttags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_recapdocumenttagsevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "recapdocument_id", "tag_id") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."recapdocument_id", NEW."tag_id"); RETURN NULL;', hash='10ba27a0fe288aaeb1d55d31ab61a9d06d31a0de', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_a2b8d', table='search_recapdocument_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='recapdocumenttags',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_recapdocumenttagsevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "recapdocument_id", "tag_id") VALUES (OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."recapdocument_id", OLD."tag_id"); RETURN NULL;', hash='0afc1523ccb5b27cba767724fc3e50d37d766b0e', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_1e77f', table='search_recapdocument_tags', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='tag',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "search_tagevent" ("date_created", "date_modified", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."date_created", NEW."date_modified", NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id"); RETURN NULL;', hash='996a4f766a08ff91fa00aa4d6584b00ccd6c3f76', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_34bc4', table='search_tag', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='tag',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "search_tagevent" ("date_created", "date_modified", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id"); RETURN NULL;', hash='b79ab36201018b1a7756d824b0a5beba61ab165a', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_2bc42', table='search_tag', when='AFTER')),
        ),
    ]
