# Generated by Django 3.2.18 on 2023-03-16 19:40

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):
    dependencies = [
        ("favorites", "0004_add_event_tables_and_triggers"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="dockettag",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="dockettag",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="note",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="note",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="prayer",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="prayer",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="usertag",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="usertag",
            name="snapshot_update",
        ),
        migrations.RemoveField(
            model_name="prayerevent",
            name="status",
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="dockettag",
            trigger=pgtrigger.compiler.Trigger(
                name="custom_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "favorites_dockettagevent" ("docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "tag_id") VALUES (OLD."docket_id", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."tag_id"); RETURN NULL;',
                    hash="0d5e0dea082de5be16a88c01949c94c0769b4a8f",
                    operation="UPDATE",
                    pgid="pgtrigger_custom_snapshot_update_c954a",
                    table="favorites_dockettag",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="note",
            trigger=pgtrigger.compiler.Trigger(
                name="custom_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."date_created" IS DISTINCT FROM NEW."date_created" OR OLD."user_id" IS DISTINCT FROM NEW."user_id" OR OLD."cluster_id_id" IS DISTINCT FROM NEW."cluster_id_id" OR OLD."audio_id_id" IS DISTINCT FROM NEW."audio_id_id" OR OLD."docket_id_id" IS DISTINCT FROM NEW."docket_id_id" OR OLD."recap_doc_id_id" IS DISTINCT FROM NEW."recap_doc_id_id" OR OLD."name" IS DISTINCT FROM NEW."name" OR OLD."notes" IS DISTINCT FROM NEW."notes")',
                    func='INSERT INTO "favorites_noteevent" ("audio_id_id", "cluster_id_id", "date_created", "date_modified", "docket_id_id", "id", "name", "notes", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "recap_doc_id_id", "user_id") VALUES (OLD."audio_id_id", OLD."cluster_id_id", OLD."date_created", OLD."date_modified", OLD."docket_id_id", OLD."id", OLD."name", OLD."notes", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."recap_doc_id_id", OLD."user_id"); RETURN NULL;',
                    hash="d16a9903da4f7207e85cef197b16404ab23ab0b8",
                    operation="UPDATE",
                    pgid="pgtrigger_custom_snapshot_update_f3950",
                    table="favorites_note",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="prayer",
            trigger=pgtrigger.compiler.Trigger(
                name="custom_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."date_created" IS DISTINCT FROM NEW."date_created" OR OLD."user_id" IS DISTINCT FROM NEW."user_id" OR OLD."recap_document_id" IS DISTINCT FROM NEW."recap_document_id")',
                    func='INSERT INTO "favorites_prayerevent" ("date_created", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "recap_document_id", "user_id") VALUES (OLD."date_created", OLD."id", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."recap_document_id", OLD."user_id"); RETURN NULL;',
                    hash="1526ae403d2c34a5827cd3b5008b89e7a560f831",
                    operation="UPDATE",
                    pgid="pgtrigger_custom_snapshot_update_2ec38",
                    table="favorites_prayer",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="usertag",
            trigger=pgtrigger.compiler.Trigger(
                name="custom_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."date_created" IS DISTINCT FROM NEW."date_created" OR OLD."user_id" IS DISTINCT FROM NEW."user_id" OR OLD."name" IS DISTINCT FROM NEW."name" OR OLD."title" IS DISTINCT FROM NEW."title" OR OLD."description" IS DISTINCT FROM NEW."description" OR OLD."published" IS DISTINCT FROM NEW."published")',
                    func='INSERT INTO "favorites_usertagevent" ("date_created", "date_modified", "description", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "published", "title", "user_id") VALUES (OLD."date_created", OLD."date_modified", OLD."description", OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."published", OLD."title", OLD."user_id"); RETURN NULL;',
                    hash="1ffbd033a649407382f27b0b23bdaaffba58140a",
                    operation="UPDATE",
                    pgid="pgtrigger_custom_snapshot_update_ee5b4",
                    table="favorites_usertag",
                    when="AFTER",
                ),
            ),
        ),
    ]
