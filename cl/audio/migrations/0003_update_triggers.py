# Generated by Django 3.2.18 on 2023-03-16 02:44

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('audio', '0002_add_event_tables_and_triggers'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='audio',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='audio',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='audiopanel',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='audiopanel',
            name='snapshot_update',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audio',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "audio_audioevent" ("blocked", "case_name", "case_name_full", "case_name_short", "date_blocked", "date_created", "date_modified", "docket_id", "download_url", "duration", "filepath_ia", "ia_upload_failure_count", "id", "judges", "local_path_mp3", "local_path_original_file", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "processing_complete", "sha1", "source", "stt_google_response", "stt_status") VALUES (NEW."blocked", NEW."case_name", NEW."case_name_full", NEW."case_name_short", NEW."date_blocked", NEW."date_created", NEW."date_modified", NEW."docket_id", NEW."download_url", NEW."duration", NEW."filepath_ia", NEW."ia_upload_failure_count", NEW."id", NEW."judges", NEW."local_path_mp3", NEW."local_path_original_file", _pgh_attach_context(), NOW(), \'custom_snapshot\', NEW."id", NEW."processing_complete", NEW."sha1", NEW."source", NEW."stt_google_response", NEW."stt_status"); RETURN NULL;', hash='bf2b5b180eff7217f098764f0db8a4788b0fe298', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_46b12', table='audio_audio', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audio',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "audio_audioevent" ("blocked", "case_name", "case_name_full", "case_name_short", "date_blocked", "date_created", "date_modified", "docket_id", "download_url", "duration", "filepath_ia", "ia_upload_failure_count", "id", "judges", "local_path_mp3", "local_path_original_file", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "processing_complete", "sha1", "source", "stt_google_response", "stt_status") VALUES (OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."date_blocked", OLD."date_created", OLD."date_modified", OLD."docket_id", OLD."download_url", OLD."duration", OLD."filepath_ia", OLD."ia_upload_failure_count", OLD."id", OLD."judges", OLD."local_path_mp3", OLD."local_path_original_file", _pgh_attach_context(), NOW(), \'custom_snapshot\', OLD."id", OLD."processing_complete", OLD."sha1", OLD."source", OLD."stt_google_response", OLD."stt_status"); RETURN NULL;', hash='f99a4957a9d0c2f1e06ed878efdb04ad7e693506', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_ad0df', table='audio_audio', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audiopanel',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "audio_audiopanelevent" ("audio_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."audio_id", NEW."id", NEW."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='debf11c5c5b4eb8328954c96876754fa574d9082', operation='INSERT', pgid='pgtrigger_custom_snapshot_insert_ae584', table='audio_audio_panel', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audiopanel',
            trigger=pgtrigger.compiler.Trigger(name='custom_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "audio_audiopanelevent" ("audio_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."audio_id", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'custom_snapshot\'); RETURN NULL;', hash='085b4ec0423661deb14f614162b05e76db4fa3da', operation='UPDATE', pgid='pgtrigger_custom_snapshot_update_2497c', table='audio_audio_panel', when='AFTER')),
        ),
    ]
